# ==============================
# Development stage (Vite server)
# ==============================
FROM node:18-alpine AS development

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN apk add --no-cache python3 make g++
RUN npm install

COPY . .

# Expose port 5173 for Vite dev server
EXPOSE 5173

# Start development server with proper host binding
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "5173"]

# ==============================
# Builder stage (build static assets)
# ==============================
FROM node:18-alpine AS builder

WORKDIR /app

# ARG to handle different contexts
ARG CONTEXT_PATH=.

# Copy package files
COPY ${CONTEXT_PATH}/package*.json ./

# Use npm ci if package-lock.json exists, otherwise npm install
RUN npm ci --omit=dev

# Copy frontend source
COPY ${CONTEXT_PATH}/ .
RUN npm run build

# ==============================
# Production stage (Nginx)
# ==============================
FROM nginx:alpine AS production

# Copy built files to nginx
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy custom nginx configuration
COPY <<EOF /etc/nginx/conf.d/default.conf
server {
    listen 80;
    server_name _;
    
    # Serve static React files
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files \$uri \$uri/ /index.html;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
EOF

# Add health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost/health || exit 1

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
